generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id  Int @id @default(autoincrement())
  fullName String
  email String @unique
  password  String   
  role UserRole @default(USER)
  verified DateTime
  provider String?
  providerId String?
  cart Cart?
  order Order[]
  verificationCode VerificationCode?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id  Int @id @default(autoincrement())
  name String @unique
  products Product[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id  Int @id @default(autoincrement())
  name String
  imageUrl  String
  categoryId Int
  category Category @relation(fields: [categoryId], references: [id])
  ingredients Ingredient[]
  productItems ProductItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt  
}

model ProductItem {
  id  Int @id @default(autoincrement())
  size Int?  
  price Int
  pizzaType Int?
  productId Int
  product Product @relation(fields: [productId], references: [id])
  cartItems CartItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
}

model Ingredient {
  id  Int @id @default(autoincrement())
  name String
  price Int
  imageUrl  String
  products Product[]
  cartItems CartItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id  Int @id @default(autoincrement())
  totalAmount Int @default(0)
  token String
  userId Int? @unique
  user User? @relation(fields: [userId], references: [id])
  items CartItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
  id  Int @id @default(autoincrement())
  quantity Int

  productItemId Int
  productItem ProductItem @relation(fields: [productItemId], references: [id])

  cartId Int
  cart Cart @relation(fields: [cartId], references: [id])

  ingredients Ingredient[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id  Int @id @default(autoincrement())
  token String
  totalAmount Int
  status OrderStatus
  paymentId String?
  items Json

  fullName String
  address String
  email String
  phone String
  comment String?

  userId Int?
  order User? @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationCode {
  id  Int @id @default(autoincrement())
  code String @unique
  userId Int @unique
  user User @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  @@unique([userId, code])
}

enum OrderStatus {
  PENDING
  SUCCEEDED
  CANCELLED
}

enum UserRole {
  USER
  ADMIN
}